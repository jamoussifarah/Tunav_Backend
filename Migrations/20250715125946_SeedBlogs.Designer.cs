// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TunavBackend;

#nullable disable

namespace TunavBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250715125946_SeedBlogs")]
    partial class SeedBlogs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TunavBackend.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 12,
                            Contenu = "1. Qu’est-ce que l’IoT ?\r\nL’IoT, ou Internet des Objets, désigne un réseau d'objets physiques connectés à Internet capables de collecter, échanger et analyser des données. Ces objets — capteurs, caméras, GPS, machines industrielles, équipements embarqués — communiquent entre eux ou avec une plateforme centrale, permettant ainsi de prendre des décisions en temps réel, souvent sans intervention humaine.\r\nL’IoT transforme les objets du quotidien en outils intelligents au service de la performance, de la sécurité et de l'automatisation.\r\n\r\n________________________________________\r\n2. Pourquoi choisir l’IoT ?\r\nDans un monde où la réactivité et l’optimisation des ressources sont devenues des priorités, l’IoT permet aux entreprises de :\r\n• Mieux maîtriser leurs opérations\r\n• Réduire les coûts liés aux pertes ou aux pannes\r\n• Offrir une expérience client plus fluide et personnalisée\r\n• Collecter des données stratégiques pour la prise de décision\r\nL’IoT n’est plus une option, mais un levier essentiel pour toute entreprise souhaitant rester compétitive à l’ère numérique.\r\n\r\n________________________________________\r\n\r\n3. Les avantages concrets de l’IoT pour les entreprises\r\n✅ Optimisation des processus\r\nLes objets connectés permettent d’automatiser des tâches chronophages et d’avoir une vue globale sur l’activité.\r\n✅ Réduction des coûts\r\nGrâce à la maintenance prédictive, il est possible d’intervenir avant qu’un problème ne survienne.\r\n✅ Sécurité renforcée\r\nDes systèmes de surveillance intelligente permettent de suivre en temps réel les véhicules, les bâtiments ou les machines.\r\n✅ Gain de productivité\r\nLes données collectées sont analysées automatiquement pour aider à la prise de décision rapide.\r\n✅ Traçabilité & contrôle à distance\r\nIdéal pour le suivi de flotte, la logistique, l’agriculture ou l’énergie, l’IoT offre un pilotage centralisé.\r\n\r\n________________________________________\r\n\r\n4. Tunav IT Group : votre partenaire IoT en Tunisie\r\nSpécialiste des technologies IT, IoT et GPS, Tunav IT Group accompagne depuis plusieurs années les entreprises tunisiennes dans leur transformation digitale.\r\nNos solutions IoT incluent :\r\n🔹 Tracking GPS/GSM/Satellite en temps réel\r\n🔹 Diagnostics embarqués (CANBUS / OBD) pour véhicules professionnels\r\n🔹 Surveillance vidéo embarquée avec alerte intelligente\r\n🔹 Capteurs de température, de mouvement, de consommation pour divers secteurs\r\n🔹 Plateformes cloud pour la gestion et l’analyse des données\r\n🔹 Support local réactif et personnalisé\r\nNous concevons des systèmes clés en main, évolutifs et sécurisés, adaptés à vos besoins spécifiques. Que vous soyez dans le transport, la logistique, l’agriculture ou la distribution, nous avons une solution IoT sur mesure pour vous.\r\n\r\n________________________________________\r\n\r\n💬 Vous souhaitez digitaliser votre activité avec l’IoT ?\r\nTunav IT Group est prêt à vous accompagner. Contactez-nous pour une démonstration gratuite et découvrez comment nos solutions connectées peuvent booster vos performances.\r\n",
                            DatePublication = new DateTime(2025, 7, 15, 11, 46, 31, 65, DateTimeKind.Local).AddTicks(6288),
                            ImagePath = "/uploads/cba1c67e-f7f0-418e-bd29-0e8f8e282831.jpeg",
                            Likes = 0,
                            Titre = "Pourquoi l’IoT est la clé du succès des entreprises modernes ?",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TunavBackend.Models.CaracteristiqueProduitAvecDevis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProduitAvecDevisId")
                        .HasColumnType("int");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProduitAvecDevisId");

                    b.ToTable("CaracteristiquesProduitAvecDevis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProduitAvecDevisId = 1,
                            Texte = "Fermer à distance n importe quel disjoncteur."
                        },
                        new
                        {
                            Id = 2,
                            ProduitAvecDevisId = 1,
                            Texte = "Planifier l arrêt et le démarrage automatiques des machines."
                        },
                        new
                        {
                            Id = 3,
                            ProduitAvecDevisId = 1,
                            Texte = "Mesurer la tension électronique à distance."
                        },
                        new
                        {
                            Id = 4,
                            ProduitAvecDevisId = 2,
                            Texte = "traçabilité et sécurisation de vos biens"
                        },
                        new
                        {
                            Id = 5,
                            ProduitAvecDevisId = 2,
                            Texte = "Données en temps réel"
                        },
                        new
                        {
                            Id = 6,
                            ProduitAvecDevisId = 3,
                            Texte = "surveillance en temps réel des niveaux d’oxygène, de l’humidité, de la température, de la pression, intégrant le GPS, le WiFi, le Bluetooth"
                        },
                        new
                        {
                            Id = 7,
                            ProduitAvecDevisId = 3,
                            Texte = "compatible avec les protocoles de communication Modbus RS485 et RS422"
                        },
                        new
                        {
                            Id = 8,
                            ProduitAvecDevisId = 4,
                            Texte = "Détecte rapidement les anomalies telles que le vol de carburant, envossie des alertes"
                        },
                        new
                        {
                            Id = 9,
                            ProduitAvecDevisId = 4,
                            Texte = "suit l’activité du réservoir"
                        },
                        new
                        {
                            Id = 10,
                            ProduitAvecDevisId = 4,
                            Texte = "enregistre les pleins et les retraits"
                        },
                        new
                        {
                            Id = 11,
                            ProduitAvecDevisId = 4,
                            Texte = "simulation et reconstitution de trajets"
                        },
                        new
                        {
                            Id = 12,
                            ProduitAvecDevisId = 5,
                            Texte = "Grâce à ses capteurs de santé avancés, elle permet une surveillance précise des signes vitaux, pour un mode de vie plus intelligent et plus sain."
                        });
                });

            modelBuilder.Entity("TunavBackend.Models.CaracteristiqueProduitSansDevis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProduitSansDevisId")
                        .HasColumnType("int");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProduitSansDevisId");

                    b.ToTable("CaracteristiquesProduitSansDevis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProduitSansDevisId = 1,
                            Texte = "KIT TRACKING GPS"
                        },
                        new
                        {
                            Id = 2,
                            ProduitSansDevisId = 1,
                            Texte = "GPRS"
                        },
                        new
                        {
                            Id = 3,
                            ProduitSansDevisId = 1,
                            Texte = "SMS - ADVANCED AUTOMOTIVE"
                        },
                        new
                        {
                            Id = 4,
                            ProduitSansDevisId = 2,
                            Texte = "KIT TRACKING GPS"
                        },
                        new
                        {
                            Id = 5,
                            ProduitSansDevisId = 2,
                            Texte = "GPRS"
                        },
                        new
                        {
                            Id = 6,
                            ProduitSansDevisId = 2,
                            Texte = "SMS - ETANCHE AUTOMOTIVE"
                        },
                        new
                        {
                            Id = 7,
                            ProduitSansDevisId = 3,
                            Texte = "KIT TRACKING GPS"
                        },
                        new
                        {
                            Id = 8,
                            ProduitSansDevisId = 3,
                            Texte = "GPRS"
                        },
                        new
                        {
                            Id = 9,
                            ProduitSansDevisId = 3,
                            Texte = "SMS - AUTOMOTIVE"
                        },
                        new
                        {
                            Id = 10,
                            ProduitSansDevisId = 4,
                            Texte = "KIT TRACKING GPS"
                        },
                        new
                        {
                            Id = 11,
                            ProduitSansDevisId = 4,
                            Texte = "GPRS"
                        },
                        new
                        {
                            Id = 12,
                            ProduitSansDevisId = 4,
                            Texte = "SMS - AUTOMOTIVE"
                        },
                        new
                        {
                            Id = 13,
                            ProduitSansDevisId = 5,
                            Texte = "KIT TRACKING GPS"
                        },
                        new
                        {
                            Id = 14,
                            ProduitSansDevisId = 5,
                            Texte = "GPRS"
                        },
                        new
                        {
                            Id = 15,
                            ProduitSansDevisId = 5,
                            Texte = "SMS - BUSCAN"
                        },
                        new
                        {
                            Id = 16,
                            ProduitSansDevisId = 5,
                            Texte = "CARBURANT AUTOMOTIVE"
                        },
                        new
                        {
                            Id = 17,
                            ProduitSansDevisId = 6,
                            Texte = "KIT TRACKING GPS"
                        },
                        new
                        {
                            Id = 18,
                            ProduitSansDevisId = 6,
                            Texte = "GPRS"
                        },
                        new
                        {
                            Id = 19,
                            ProduitSansDevisId = 6,
                            Texte = "SMS - PORTABLE"
                        },
                        new
                        {
                            Id = 20,
                            ProduitSansDevisId = 7,
                            Texte = "DASHCAM GPS 4G 3CH"
                        },
                        new
                        {
                            Id = 21,
                            ProduitSansDevisId = 7,
                            Texte = "FRONT CAM INSIDE CAM"
                        },
                        new
                        {
                            Id = 22,
                            ProduitSansDevisId = 7,
                            Texte = "WIFI,MICRO&SPEAKER, SOS, ADAS, DMS - OPTIONAL EXT CAM, OBD, RFID, "
                        },
                        new
                        {
                            Id = 23,
                            ProduitSansDevisId = 7,
                            Texte = "TF CARD"
                        },
                        new
                        {
                            Id = 24,
                            ProduitSansDevisId = 8,
                            Texte = "KIT TRACKING GPS"
                        },
                        new
                        {
                            Id = 25,
                            ProduitSansDevisId = 8,
                            Texte = "GRPS"
                        },
                        new
                        {
                            Id = 26,
                            ProduitSansDevisId = 8,
                            Texte = "SMS - TRAILER SMART LOCK"
                        });
                });

            modelBuilder.Entity("TunavBackend.Models.Devis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProduitAvecDevisId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduitAvecDevisId");

                    b.HasIndex("UserId");

                    b.ToTable("Devis");
                });

            modelBuilder.Entity("TunavBackend.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntrepriseDirige")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienceIotGps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motivation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionActuelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("TunavBackend.Models.ProduitAvecDevis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProduitsAvecDevis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categorie = "IOT",
                            Description = "Système de disjoncteur connecté permettant la surveillance et le contrôle à distance.",
                            ImagePath = "/assets/img/disjoncteur_intelligent.png",
                            Titre = "DISJONCTEUR INTELLIGENT"
                        },
                        new
                        {
                            Id = 2,
                            Categorie = "IOT",
                            Description = "Solution RFID intelligente pour la gestion et l’identification automatisée des actifs.",
                            ImagePath = "/assets/img/tagit_rfid.png",
                            Titre = "TAGIT RFID"
                        },
                        new
                        {
                            Id = 3,
                            Categorie = "IOT",
                            Description = "Système IoT complet pour le suivi énergétique et la gestion des bâtiments intelligents.",
                            ImagePath = "/assets/img/easy_360.png",
                            Titre = "EASY 360"
                        },
                        new
                        {
                            Id = 4,
                            Categorie = "IOT",
                            Description = "Système IoT complet pour le suivi énergétique et la gestion des bâtiments intelligents.",
                            ImagePath = "/assets/img/FUEL_RESCUE.png",
                            Titre = "FUEL RESCUE"
                        },
                        new
                        {
                            Id = 5,
                            Categorie = "IOT",
                            Description = "Notre smartwatch allie performance et bien-être dans un design moderne et connecté. Équipée d’un écran tactile haute résolution...",
                            ImagePath = "/assets/img/MedWatch.png",
                            Titre = "MED WATCH"
                        });
                });

            modelBuilder.Entity("TunavBackend.Models.ProduitSansDevis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ProduitsSansDevis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categorie = "GPS TRACKER",
                            Description = "Ce produit est un traceur GPS de haute précision, idéal pour la géolocalisation de véhicules.",
                            ImagePath = "/assets/img/ET6_KIT.png",
                            Prix = "495,000DT",
                            Titre = "ET6_KIT",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Categorie = "GPS TRACKER",
                            Description = "Un modèle avancé de traceur GPS, avec connectivité améliorée et autonomie prolongée.",
                            ImagePath = "/assets/img/ET8_KIT.png",
                            Prix = "435,000DT",
                            Titre = "ET8_KIT",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Categorie = "GPS TRACKER",
                            Description = "Traceur GPS avec technologie BLE pour un suivi en temps réel via smartphone.",
                            ImagePath = "/assets/img/ETBLE_KIT.png",
                            Prix = "345,000 DT",
                            Titre = "ETBLE_KIT",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Categorie = "GPS TRACKER",
                            Description = "Traceur GPS robuste conçu pour les environnements difficiles et les flottes.",
                            ImagePath = "/assets/img/ETX_KIT.png",
                            Prix = "195,000DT",
                            Titre = "ETX_KIT",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Categorie = "GPS TRACKER",
                            Description = "Traceur GPS avancé conçu pour les véhicules lourds et la gestion de flotte, avec surveillance du carburant et connectivité BUSCAN.",
                            ImagePath = "/assets/img/ETCAN_KIT.png",
                            Prix = "695,000DT",
                            Titre = "ETCAN_KIT",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Categorie = "GPS TRACKER",
                            Description = "Un mini traceur GPS compact pour les objets personnels ou petits véhicules.",
                            ImagePath = "/assets/img/MiniTrace_ KIT.png",
                            Prix = "695,000DT",
                            Titre = "MiniTrace_KIT",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Categorie = "GPS TRACKER",
                            Description = "Caméra de surveillance avec GPS intégré pour le suivi vidéo et géographique.",
                            ImagePath = "/assets/img/Camtrack.png",
                            Prix = "1 195,000DT",
                            Titre = "Camtrack",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Categorie = "GPS TRACKER",
                            Description = "Serrure connectée avec traçabilité GPS pour les containers et accès sécurisés.",
                            ImagePath = "/assets/img/SMART_lo.png",
                            Prix = "1 195,000DT",
                            Titre = "SMART_LOCK",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TunavBackend.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 12,
                            Nom = "GPS Tracking IoT"
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 12,
                            Nom = "IOT Tunisie"
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 12,
                            Nom = "Flotte intelligente"
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 12,
                            Nom = "Surveillance à distance"
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 12,
                            Nom = "Gestion de flotte connectée"
                        },
                        new
                        {
                            Id = 6,
                            BlogId = 12,
                            Nom = "IOT et Cloud"
                        },
                        new
                        {
                            Id = 7,
                            BlogId = 12,
                            Nom = "Diagnostic à distance"
                        });
                });

            modelBuilder.Entity("TunavBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test@Tunav.com",
                            Nom = "admin1",
                            Password = "TUNAV_ADMIN_123",
                            Role = 1
                        });
                });

            modelBuilder.Entity("TunavBackend.Models.Blog", b =>
                {
                    b.HasOne("TunavBackend.Models.User", null)
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunavBackend.Models.CaracteristiqueProduitAvecDevis", b =>
                {
                    b.HasOne("TunavBackend.Models.ProduitAvecDevis", "Produit")
                        .WithMany("Caracteristiques")
                        .HasForeignKey("ProduitAvecDevisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("TunavBackend.Models.CaracteristiqueProduitSansDevis", b =>
                {
                    b.HasOne("TunavBackend.Models.ProduitSansDevis", "Produit")
                        .WithMany("Caracteristiques")
                        .HasForeignKey("ProduitSansDevisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("TunavBackend.Models.Devis", b =>
                {
                    b.HasOne("TunavBackend.Models.ProduitAvecDevis", "produitDevis")
                        .WithMany("Devis")
                        .HasForeignKey("ProduitAvecDevisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunavBackend.Models.User", "userDevis")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("produitDevis");

                    b.Navigation("userDevis");
                });

            modelBuilder.Entity("TunavBackend.Models.Franchise", b =>
                {
                    b.HasOne("TunavBackend.Models.User", null)
                        .WithMany("Franchises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunavBackend.Models.ProduitSansDevis", b =>
                {
                    b.HasOne("TunavBackend.Models.User", null)
                        .WithMany("ProduitsSansDevis")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunavBackend.Models.Tag", b =>
                {
                    b.HasOne("TunavBackend.Models.Blog", null)
                        .WithMany("Tags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunavBackend.Models.Blog", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("TunavBackend.Models.ProduitAvecDevis", b =>
                {
                    b.Navigation("Caracteristiques");

                    b.Navigation("Devis");
                });

            modelBuilder.Entity("TunavBackend.Models.ProduitSansDevis", b =>
                {
                    b.Navigation("Caracteristiques");
                });

            modelBuilder.Entity("TunavBackend.Models.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Franchises");

                    b.Navigation("ProduitsSansDevis");
                });
#pragma warning restore 612, 618
        }
    }
}
